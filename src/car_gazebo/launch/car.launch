<?xml version="1.0"?>
<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find car_gazebo)/worlds/car.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Spawn the master car -->
  <node name="spawn_master_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find car_description)/urdf/car_master_model.urdf -urdf -x 10 -y -1.75 -z 1 -model car_master_model" />

  <!-- Spawn the follower car -->
  <node name="spawn_follower_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find car_description)/urdf/car_follower_model.urdf -urdf -x 0 -y -1.75 -z 1 -model car_follower_model" />
  <!-- Load the URDF into the ROS Parameter Server 
  <param name="car_description"  command="$(find xacro)/xacro --><!--inorder '$(find car_description)/urdf/car.xacro'" /> -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model car -param car_description"/>-->

  <!-- ros_control rrbot launch file -->
  <!--include file="$(find car_control)/launch/car_control.launch" /-->

</launch>
